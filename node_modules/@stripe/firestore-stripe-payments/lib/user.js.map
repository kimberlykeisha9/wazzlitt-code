{"version":3,"file":"user.js","sourceRoot":"","sources":["../src/user.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAGH,OAAO,EAAQ,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAC/C,OAAO,EAAkB,mBAAmB,EAAE,MAAM,QAAQ,CAAC;AAE7D;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,QAAwB;IACrD,IAAI;QACF,MAAM,GAAG,GAAW,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACjD,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KAC7B;IAAC,OAAO,GAAY,EAAE;QACrB,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KAC5B;AACH,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,kBAAkB,CAAC,QAAwB;IACzD,MAAM,GAAG,GAAY,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC,cAAc,EAAE,CAAC;AAC9B,CAAC;AAWD,MAAM,mBAAmB;IAGvB,YAAY,GAAgB;QAC1B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEM,cAAc;;QACnB,MAAM,WAAW,GAAuB,MAAA,IAAI,CAAC,IAAI,CAAC,WAAW,0CAAE,GAAG,CAAC;QACnE,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,IAAI,mBAAmB,CAC3B,iBAAiB,EACjB,mEAAmE,CACpE,CAAC;SACH;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;AAED,MAAM,YAAY,GAAG,UAAmB,CAAC;AAEzC,SAAS,gBAAgB,CAAC,QAAwB;IAChD,IAAI,GAAG,GAAmB,QAAQ,CAAC,YAAY,CAAU,YAAY,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,EAAE;QACR,GAAG,GAAG,IAAI,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5C,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;KAC3B;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,UAAU,CAAC,QAAwB,EAAE,GAAY;IAC/D,QAAQ,CAAC,YAAY,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;AAC3C,CAAC","sourcesContent":["/*\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from \"@firebase/app\";\nimport { Auth, getAuth } from \"@firebase/auth\";\nimport { StripePayments, StripePaymentsError } from \"./init\";\n\n/**\n * Internal API for retrieving the currently signed in user. Rejects with \"unauthenticated\" if\n * the user is not signed in. Exposed for internal use.\n *\n * @internal\n */\nexport function getCurrentUser(payments: StripePayments): Promise<string> {\n  try {\n    const uid: string = getCurrentUserSync(payments);\n    return Promise.resolve(uid);\n  } catch (err: unknown) {\n    return Promise.reject(err);\n  }\n}\n\n/**\n * Internal API for retrieving the currently signed in user. Throws \"unauthenticated\" if\n * the user is not signed in. Exposed for internal use.\n *\n * @internal\n */\nexport function getCurrentUserSync(payments: StripePayments): string {\n  const dao: UserDAO = getOrInitUserDAO(payments);\n  return dao.getCurrentUser();\n}\n\n/**\n * Internal interface for introspecting the current user's login session. Exposed for testing.\n *\n * @internal\n */\nexport interface UserDAO {\n  getCurrentUser(): string;\n}\n\nclass FirebaseAuthUserDAO implements UserDAO {\n  private readonly auth: Auth;\n\n  constructor(app: FirebaseApp) {\n    this.auth = getAuth(app);\n  }\n\n  public getCurrentUser(): string {\n    const currentUser: string | undefined = this.auth.currentUser?.uid;\n    if (!currentUser) {\n      throw new StripePaymentsError(\n        \"unauthenticated\",\n        \"Failed to determine currently signed in user. User not signed in.\"\n      );\n    }\n\n    return currentUser;\n  }\n}\n\nconst USER_DAO_KEY = \"user-dao\" as const;\n\nfunction getOrInitUserDAO(payments: StripePayments): UserDAO {\n  let dao: UserDAO | null = payments.getComponent<UserDAO>(USER_DAO_KEY);\n  if (!dao) {\n    dao = new FirebaseAuthUserDAO(payments.app);\n    setUserDAO(payments, dao);\n  }\n\n  return dao;\n}\n\n/**\n * Internal API for registering a {@link UserDAO} instance with {@link StripePayments}.\n * Exported for testing.\n *\n * @internal\n */\nexport function setUserDAO(payments: StripePayments, dao: UserDAO): void {\n  payments.setComponent(USER_DAO_KEY, dao);\n}\n"]}