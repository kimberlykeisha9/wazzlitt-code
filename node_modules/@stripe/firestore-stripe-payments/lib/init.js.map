{"version":3,"file":"init.js","sourceRoot":"","sources":["../src/init.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAe,eAAe,EAAE,MAAM,eAAe,CAAC;AAE7D,eAAe,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;AAE5D;;;;;;;GAOG;AACH,MAAM,UAAU,iBAAiB,CAC/B,GAAgB,EAChB,OAA8B;IAE9B,OAAO,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC;AAYD;;;;GAIG;AACH,MAAM,OAAO,cAAc;IAGzB,YACW,GAAgB,EACR,OAA8B;QADtC,QAAG,GAAH,GAAG,CAAa;QACR,YAAO,GAAP,OAAO,CAAuB;QAJhC,eAAU,GAAe,EAAE,CAAC;IAK1C,CAAC;IAEJ;;OAEG;IACH,MAAM,CAAC,MAAM,CACX,GAAgB,EAChB,OAA8B;QAE9B,OAAO,IAAI,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,YAAY,CAAI,GAAW;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,GAAG,EAAE;YACP,OAAO,GAAQ,CAAC;SACjB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,YAAY,CAAI,GAAW,EAAE,GAAM;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC7B,CAAC;CACF;AAYD;;GAEG;AACH,MAAM,OAAO,mBAAoB,SAAQ,KAAK;IAC5C,YACW,IAA6B,EAC7B,OAAe,EACf,KAAW;QAEpB,KAAK,CAAC,OAAO,CAAC,CAAC;QAJN,SAAI,GAAJ,IAAI,CAAyB;QAC7B,YAAO,GAAP,OAAO,CAAQ;QACf,UAAK,GAAL,KAAK,CAAM;IAGtB,CAAC;CACF","sourcesContent":["/*\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, registerVersion } from \"@firebase/app\";\n\nregisterVersion(\"firestore-stripe-payments\", \"__VERSION__\");\n\n/**\n * Serves as the main entry point to this library. Initializes the client SDK,\n * and returns a handle object that can be passed into other APIs.\n *\n * @param app - A FirebaseApp instance initialized by the Firebase JS SDK.\n * @param options - Configuration options for the SDK.\n * @returns An instance of the StripePayments class.\n */\nexport function getStripePayments(\n  app: FirebaseApp,\n  options: StripePaymentsOptions\n): StripePayments {\n  return StripePayments.create(app, options);\n}\n\n/**\n * Configuration options that indicate how the Stripe payments extension has been set up.\n */\nexport interface StripePaymentsOptions {\n  customersCollection: string;\n  productsCollection: string;\n}\n\ntype Components = Record<string, unknown>;\n\n/**\n * Holds the configuration and other state information of the SDK. An instance of this class\n * must be passed to almost all the other APIs of this library. Do not directly call the\n * constructor. Use the {@link getStripePayments} function to obtain an instance.\n */\nexport class StripePayments {\n  private readonly components: Components = {};\n\n  private constructor(\n    readonly app: FirebaseApp,\n    private readonly options: StripePaymentsOptions\n  ) {}\n\n  /**\n   * @internal\n   */\n  static create(\n    app: FirebaseApp,\n    options: StripePaymentsOptions\n  ): StripePayments {\n    return new StripePayments(app, options);\n  }\n\n  /**\n   * Name of the customers collection as configured in the extension.\n   */\n  get customersCollection(): string {\n    return this.options.customersCollection;\n  }\n\n  /**\n   * Name of the products collection as configured in the extension.\n   */\n  get productsCollection(): string {\n    return this.options.productsCollection;\n  }\n\n  /**\n   * @internal\n   */\n  getComponent<T>(key: string): T | null {\n    let dao = this.components[key];\n    if (dao) {\n      return dao as T;\n    }\n\n    return null;\n  }\n\n  /**\n   * @internal\n   */\n  setComponent<T>(key: string, dao: T) {\n    this.components[key] = dao;\n  }\n}\n\n/**\n * Union of possible error codes.\n */\nexport type StripePaymentsErrorCode =\n  | \"deadline-exceeded\"\n  | \"not-found\"\n  | \"permission-denied\"\n  | \"unauthenticated\"\n  | \"internal\";\n\n/**\n * An error thrown by this SDK.\n */\nexport class StripePaymentsError extends Error {\n  constructor(\n    readonly code: StripePaymentsErrorCode,\n    readonly message: string,\n    readonly cause?: any\n  ) {\n    super(message);\n  }\n}\n"]}